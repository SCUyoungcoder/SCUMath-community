# ServerProperties
server.port=8080
#server.servlet.context-path=/community(8080/后加community访问)

# ThymeleafProperties
spring.thymeleaf.cache=false

# DataSourceProperties  配置mysql数据库以及连接池（也叫数据元，管理连接的一个工厂，能够统一初始化一批连接能够反复使用，管理连接上限）
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据库的驱动#报错Public Key Retrieval is not allowed后加上了allowPublicKeyRetrieval=true
spring.datasource.url=jdbc:mysql://47.115.53.126:3306/scumath_community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&allowPublicKeyRetrieval=true
# 连接路径
spring.datasource.username=root
spring.datasource.password=FCMW_20201220
# 账号密码。再后面是连接池的配置
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 选择连接池的类型
spring.datasource.hikari.maximum-pool-size=15
# 连接上限
spring.datasource.hikari.minimum-idle=5
# 最小空闲连接
spring.datasource.hikari.idle-timeout=30000
# 关闭连接的超时时间

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
# 映射文件的存放位置。classpath是因为resources下的mapper编译后会被编译到target/classes（即classpath）下
mybatis.type-aliases-package=com.nowcoder.community.entity
# 声明实体类所在包的包名，在包下创建实体类用于封装表的数据，做了这一项以后在配置文件里引用实体类就不用写包的包名了
mybatis.configuration.useGeneratedKeys=true
# 启用自动生成主键，id自动增长
mybatis.configuration.mapUnderscoreToCamelCase=true
# header_url headerUrl让表里字段与类中属性相互匹配

# logger 日志，便于debug。将这个包的级别调味debug
logging.level.com.nowcoder.community=debug

# MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=a1sleep@sina.com
spring.mail.password=4450d66d13559465
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

#激活链接地址
community.path.domain=http://localhost:8080



#ElasticsearthProperties.9200http.9300tcp
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300